Index: MusiciansAppV2/Controllers/UserController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Mvc;\r\nusing MusiciansAppV2.Models;\r\nusing MusiciansAppV2.Services;\r\n\r\nnamespace MusiciansAppV2.Controllers\r\n{\r\n    [ApiController]\r\n    [Route(\"api/[controller]\")]\r\n    public class UserController : ControllerBase\r\n    {\r\n        private readonly UserService _userService;\r\n\r\n        public UserController(UserService userService)\r\n        {\r\n            _userService = userService;\r\n        }\r\n\r\n        [HttpPost(\"create\")]\r\n        public async Task<ActionResult<User>> CreateUser(User user)\r\n        {\r\n            await _userService.CreateUserAsync(user);\r\n            return Ok(user);\r\n        }\r\n\r\n        [HttpPost(\"addSong/{trackId}\")]\r\n        public async Task<ActionResult<Favorite>> AddFavoriteSong(int userId, int trackId)\r\n        {\r\n            var favorite = await _userService.AddFavoriteAsync(userId, trackId);\r\n\r\n            if (favorite == null)\r\n            {\r\n                return BadRequest();\r\n            }\r\n            else\r\n            {\r\n                return Ok(favorite);\r\n            }\r\n        }\r\n\r\n        [HttpGet(\"favorites/{userId}\")]\r\n        public async Task<ActionResult<List<User>>> GetFavorites(int userId)\r\n        {\r\n            var favorites = await _userService.GetFavoritesAsync(userId);\r\n            return Ok(favorites);\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/MusiciansAppV2/Controllers/UserController.cs b/MusiciansAppV2/Controllers/UserController.cs
--- a/MusiciansAppV2/Controllers/UserController.cs	(revision 0d7cbee24b214733c04ea695ad0920a577c8aeb8)
+++ b/MusiciansAppV2/Controllers/UserController.cs	(date 1744123317194)
@@ -38,7 +38,7 @@
         }
 
         [HttpGet("favorites/{userId}")]
-        public async Task<ActionResult<List<User>>> GetFavorites(int userId)
+        public async Task<ActionResult<Favorite>> GetFavorites(int userId)
         {
             var favorites = await _userService.GetFavoritesAsync(userId);
             return Ok(favorites);
